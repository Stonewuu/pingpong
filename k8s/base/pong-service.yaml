apiVersion: apps/v1
kind: Deployment
metadata:
  name: pong-service
  namespace: pingpong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pong-service
  template:
    metadata:
      labels:
        app: pong-service
    spec:
      containers:
      - name: pong-service
        image: pong-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_URL
          value: jdbc:postgresql://postgres:5432/pong
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: ROCKETMQ_NAME_SERVER
          value: rocketmq-namesrv:9876
        - name: SPRING_APPLICATION_NAME
          value: pong-service
        - name: SPRING_APPLICATION_INSTANCE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: pong-service
  namespace: pingpong
spec:
  selector:
    app: pong-service
  ports:
  - port: 8080
    targetPort: 8080